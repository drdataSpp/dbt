-- Set up roles and permissions
USE ROLE ACCOUNTADMIN;
GRANT CREATE ROLE ON ACCOUNT TO ROLE SYSADMIN;

USE ROLE SYSADMIN;
CREATE ROLE IF NOT EXISTS DBT_ROLE;

-- Grant warehouse permissions
USE ROLE ACCOUNTADMIN;
GRANT OPERATE ON WAREHOUSE COMPUTE_WH TO ROLE SYSADMIN;
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE SYSADMIN;
GRANT OPERATE ON WAREHOUSE COMPUTE_WH TO ROLE DBT_ROLE;
GRANT USAGE ON WAREHOUSE COMPUTE_WH TO ROLE DBT_ROLE;

-- Create database and schema
USE ROLE SYSADMIN;
CREATE DATABASE IF NOT EXISTS TEST_DB;
CREATE SCHEMA IF NOT EXISTS DBT;

-- Grant database and schema permissions
GRANT USAGE ON DATABASE TEST_DB TO ROLE DBT_ROLE;
GRANT USAGE, CREATE SCHEMA ON DATABASE TEST_DB TO ROLE DBT_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA TEST_DB.DBT TO ROLE DBT_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA TEST_DB.DATA_SHARE TO ROLE DBT_ROLE;
GRANT ALL PRIVILEGES ON SCHEMA TEST_DB.ADMIN TO ROLE DBT_ROLE;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON ALL TABLES IN SCHEMA DBT TO ROLE DBT_ROLE;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON FUTURE TABLES IN SCHEMA DBT TO ROLE DBT_ROLE;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON ALL TABLES IN SCHEMA DBT TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON FUTURE TABLES IN SCHEMA DBT TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON ALL VIEWS IN SCHEMA DBT TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON FUTURE VIEWS IN SCHEMA DBT TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON ALL TABLES IN SCHEMA "ADMIN" TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON FUTURE TABLES IN SCHEMA "ADMIN" TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON ALL VIEWS IN SCHEMA "ADMIN" TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON FUTURE VIEWS IN SCHEMA "ADMIN" TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON ALL VIEWS IN SCHEMA DATA_SHARE TO ROLE SYSADMIN;
GRANT INSERT, REFERENCES, SELECT, TRUNCATE, UPDATE ON FUTURE VIEWS IN SCHEMA DATA_SHARE TO ROLE SYSADMIN;

-- Create dbt user with Key-Pair Authentication
USE ROLE ACCOUNTADMIN;
CREATE USER IF NOT EXISTS DBT_USER 
LOGIN_NAME = DBT_USER 
DISPLAY_NAME = DBT_USER
RSA_PUBLIC_KEY = '<YOUR_PUBLIC_KEY_WITHOUT_DASHED_COMMENTS>' /* E.g., MIIBI.... */ 
COMMENT = 'Service account for the DBT User';

-- Verify user creation
DESC USER DBT_USER;

-- Grant role to user
USE ROLE SYSADMIN;
GRANT ROLE DBT_ROLE TO USER DBT_USER;

-- Create schema and table for logging failed queries
USE ROLE SYSADMIN;
CREATE SCHEMA DBT_LOGS;
CREATE TABLE IF NOT EXISTS TEST_DB.DBT_LOGS.DBT_REDACTED_QUERIES
(
    QUERY_ID STRING,
    USER_EXECUTED STRING,
    START_TS TIMESTAMP_LTZ,
    END_TS TIMESTAMP_LTZ,
    QUERY_TEXT STRING,
    ERROR_CODE STRING,
    ERROR_TEXT STRING
);

-- Grant permissions on logging table
GRANT USAGE ON SCHEMA TEST_DB.DBT_LOGS TO ROLE DBT_ROLE;
GRANT SELECT, INSERT, TRUNCATE, DELETE, UPDATE, REFERENCES ON ALL TABLES IN SCHEMA DBT_LOGS TO ROLE DBT_ROLE;

-- Grant imported privileges
USE ROLE ACCOUNTADMIN;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE SYSADMIN;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE DBT_ROLE;